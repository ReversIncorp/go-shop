services:
  db:
    image: postgres:latest
    container_name: dev-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
    networks:
      - dev-backend-network

  redis: 
    image: redis:latest
    container_name: dev-redis
    ports:
      - 6379:6379
    volumes:
      - dev_redis_data:/data
    networks:
      - dev-backend-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dev-backend
    ports:
      - 8080:8080
    networks:
      - dev-backend-network
    depends_on:
      - db
      - redis
    env_file:
      - .env

  dendrite:
    image: matrixdotorg/dendrite-monolith:latest
    container_name: dev-dendrite
    ports:
      - 8008:8008
    volumes:
      - ./dendrite_config.yaml:/etc/dendrite/dendrite.yaml:ro
      - ./dendrite_matrix_key.pem:/etc/dendrite/matrix_key.pem:ro
      - dev_dendrite_data:/var/dendrite
    networks:
      - dev-backend-network
    command: --config /etc/dendrite/dendrite.yaml --really-enable-open-registration
    restart: unless-stopped

networks:
  dev-backend-network:
    driver: bridge

volumes:
  dev_postgres_data:
  dev_dendrite_data:
  dev_redis_data: