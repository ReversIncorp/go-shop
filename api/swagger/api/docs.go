// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Go Shop API Support",
            "url": "https://github.com/ReversIncorp/go-shop",
            "email": "a.savko.developer@goshop.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Возвращает список всех категорий в системе",
                "tags": [
                    "categories"
                ],
                "summary": "Получение всех категорий",
                "responses": {
                    "200": {
                        "description": "Список всех категорий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую категорию для магазина",
                "tags": [
                    "categories"
                ],
                "summary": "Создание категории",
                "parameters": [
                    {
                        "description": "Данные категории",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Категория создана",
                        "schema": {
                            "$ref": "#/definitions/entities.Category"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Возвращает информацию о категории по ее ID",
                "tags": [
                    "categories"
                ],
                "summary": "Получение категории по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о категории",
                        "schema": {
                            "$ref": "#/definitions/entities.Category"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет категорию из системы",
                "tags": [
                    "categories"
                ],
                "summary": "Удаление категории",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Категория удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/search": {
            "post": {
                "description": "Возвращает список продуктов с пагинацией и фильтрацией",
                "tags": [
                    "products"
                ],
                "summary": "Получение продуктов по фильтрам",
                "parameters": [
                    {
                        "description": "Параметры поиска",
                        "name": "searchParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.ProductSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список продуктов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Возвращает информацию о продукте по его ID",
                "tags": [
                    "products"
                ],
                "summary": "Получение продукта по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о продукте",
                        "schema": {
                            "$ref": "#/definitions/entities.Product"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Продукт не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет продукт из системы",
                "tags": [
                    "products"
                ],
                "summary": "Удаление продукта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Продукт удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Продукт не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores": {
            "post": {
                "description": "Создает новый магазин для пользователя",
                "tags": [
                    "stores"
                ],
                "summary": "Создание магазина",
                "parameters": [
                    {
                        "description": "Данные магазина",
                        "name": "store",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Store"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Магазин создан",
                        "schema": {
                            "$ref": "#/definitions/entities.Store"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores/search": {
            "post": {
                "description": "Возвращает список магазинов с пагинацией и фильтрацией",
                "tags": [
                    "stores"
                ],
                "summary": "Получение магазинов по фильтрам",
                "parameters": [
                    {
                        "description": "Параметры поиска",
                        "name": "searchParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.StoreSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список магазинов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores/{store_id}": {
            "get": {
                "description": "Возвращает информацию о магазине по его ID",
                "tags": [
                    "stores"
                ],
                "summary": "Получение магазина по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о магазине",
                        "schema": {
                            "$ref": "#/definitions/entities.Store"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Магазин не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет информацию о магазине",
                "tags": [
                    "stores"
                ],
                "summary": "Обновление магазина",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленные данные магазина",
                        "name": "store",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Store"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Магазин обновлен",
                        "schema": {
                            "$ref": "#/definitions/entities.Store"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Магазин не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет магазин из системы",
                "tags": [
                    "stores"
                ],
                "summary": "Удаление магазина",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Магазин удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Магазин не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores/{store_id}/categories": {
            "get": {
                "description": "Возвращает все категории конкретного магазина",
                "tags": [
                    "categories"
                ],
                "summary": "Получение категорий магазина",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список категорий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID магазина",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Связывает категорию с магазином",
                "tags": [
                    "stores"
                ],
                "summary": "Привязка категории к магазину",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID категории",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Категория привязана",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores/{store_id}/categories/{category_id}": {
            "delete": {
                "description": "Отвязывает категорию от магазина",
                "tags": [
                    "stores"
                ],
                "summary": "Отвязка категории от магазина",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Категория отвязана",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверные ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores/{store_id}/products": {
            "post": {
                "description": "Создает новый продукт в магазине",
                "tags": [
                    "products"
                ],
                "summary": "Создание продукта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные продукта",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Продукт создан",
                        "schema": {
                            "$ref": "#/definitions/entities.Product"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stores/{store_id}/products/{id}": {
            "put": {
                "description": "Обновляет информацию о продукте",
                "tags": [
                    "products"
                ],
                "summary": "Обновление продукта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID магазина",
                        "name": "store_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленные данные продукта",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Продукт обновлен",
                        "schema": {
                            "$ref": "#/definitions/entities.Product"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Продукт не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Аутентифицирует пользователя и возвращает токены доступа",
                "tags": [
                    "users"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.LoginCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный вход",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "description": "Завершает сессию пользователя",
                "tags": [
                    "users"
                ],
                "summary": "Выход из системы",
                "parameters": [
                    {
                        "description": "Access token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный выход",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка при выходе",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/refresh": {
            "post": {
                "description": "Обновляет токены доступа используя refresh token",
                "tags": [
                    "users"
                ],
                "summary": "Обновление сессии",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токены обновлены",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверный refresh token",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Создает нового пользователя в системе",
                "tags": [
                    "users"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Возвращает информацию о пользователе по его ID",
                "tags": [
                    "users"
                ],
                "summary": "Получение пользователя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errorhandling.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Category": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.LoginCredentials": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "entities.Product": {
            "type": "object",
            "required": [
                "category_id",
                "description",
                "name",
                "price",
                "quantity"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "store_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.ProductSearchParams": {
            "type": "object",
            "required": [
                "cursor",
                "limit"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "cursor": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "store_id": {
                    "type": "integer"
                }
            }
        },
        "entities.Store": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.StoreSearchParams": {
            "type": "object",
            "required": [
                "cursor",
                "limit"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "cursor": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "required": [
                "email",
                "is_seller",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_seller": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "errorhandling.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP статус-код",
                    "type": "integer"
                },
                "details": {
                    "description": "Сообщение для пользователя",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Введите \"Bearer\" за которым следует пробел и JWT токен.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Go Shop API",
	Description:      "REST API для маркетплейса на Go с JWT аутентификацией, управлением магазинами, продуктами и категориями",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
